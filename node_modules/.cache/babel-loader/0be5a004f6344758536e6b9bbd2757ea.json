{"ast":null,"code":"var _jsxFileName = \"/home/pegatzu/final_proyect_holberton/src/components/Routes/MapRouteEdit.jsx\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport mapboxgl from 'mapbox-gl';\nimport '@mapbox/mapbox-gl-draw/dist/mapbox-gl-draw.css';\nimport '../../style/map.css';\nimport axios from \"axios\";\nimport { Apiurl } from '../../services/apirest';\nimport mapboxGlDraw from \"@mapbox/mapbox-gl-draw\";\nimport '@mapbox/mapbox-gl-draw/dist/mapbox-gl-draw.css';\nexport function MapRouteEdit(props) {\n  const mapContainer = useRef(null);\n  const [map, setMap] = useState(null);\n  const [lng, setLng] = useState(-56.073358);\n  const [lat, setLat] = useState(-34.791454);\n  const [zoom, setZoom] = useState(11);\n  useEffect(() => {\n    mapboxgl.accessToken = \"pk.eyJ1IjoiYm9saW9saWFndXN0aW4iLCJhIjoiY2t6eDVzcWY5NDJoNTJucW9xaHY2bXA2dCJ9.ZR3iXpsXSNMjzh9Nj-0EDQ\";\n\n    const initializeMap = _ref => {\n      let {\n        setMap,\n        mapContainer\n      } = _ref;\n      const map = new mapboxgl.Map({\n        container: mapContainer.current,\n        style: \"mapbox://styles/mapbox/streets-v11\",\n        // stylesheet location\n        center: [lng, lat],\n        zoom: zoom,\n        maxPitch: 60\n      });\n      map.addControl(new mapboxgl.FullscreenControl());\n      map.on('load', function () {\n        map.removeLayer('poi-label');\n        let url = Apiurl + \"/api/stops\";\n        axios.get(url).then(res => {\n          const out = {\n            \"type\": \"FeatureCollection\",\n            \"features\": []\n          };\n\n          for (let i = 0; i < res.data.length; i++) {\n            out.features.push({\n              \"type\": \"Feature\",\n              \"geometry\": {\n                \"type\": \"Point\",\n                \"coordinates\": res.data[i].position.coordinates\n              },\n              \"properties\": {\n                \"_id\": res.data[i]._id,\n                \"state\": \"off\",\n                \"idx\": undefined\n              }\n            });\n          }\n\n          if (stop_list) {\n            for (let i = 0; i < stop_list.length; i++) {\n              for (let j = 0; j < out.features.length; j++) {\n                if (out.features[j].properties._id == stop_list[i]) {\n                  out.features[j].properties.state = \"on\";\n                  out.features[j].properties.idx = i;\n                }\n              }\n\n              console.log(stop_list[i]);\n            }\n          }\n\n          map.addSource('bus_route', {\n            type: 'geojson',\n            data: out\n          });\n          map.addLayer({\n            id: 'bus_route_stops',\n            type: 'circle',\n            source: 'bus_route',\n            paint: {\n              'circle-color': '#909090',\n              'circle-radius': ['interpolate', ['linear'], ['zoom'], 12, 0, 18, 12],\n              \"circle-opacity\": 0.7,\n              \"circle-pitch-alignment\": \"map\"\n            },\n            filter: [\"all\", ['==', '$type', 'Point'], ['==', 'state', 'off']]\n          });\n          map.addLayer({\n            id: 'bus_route_stops_on',\n            type: 'circle',\n            source: 'bus_route',\n            paint: {\n              'circle-color': '#000000',\n              'circle-radius': ['interpolate', ['linear'], ['zoom'], 12, 3, 18, 12],\n              \"circle-opacity\": 1.0,\n              \"circle-pitch-alignment\": \"map\"\n            },\n            filter: [\"all\", ['==', '$type', 'Point'], ['==', 'state', 'on']]\n          });\n          map.addLayer({\n            id: 'bus_route_stops_order',\n            type: 'symbol',\n            source: 'bus_route',\n            layout: {\n              \"text-field\": \"{idx}\",\n              \"text-anchor\": \"bottom\",\n              \"text-offset\": [0, -0.5],\n              \"text-allow-overlap\": true\n            },\n            filter: ['==', '$type', 'Point']\n          });\n        });\n        const draw = new mapboxGlDraw({\n          displayControlsDefault: false,\n          styles: [{\n            'id': 'lines',\n            'type': 'line',\n            'filter': ['all', ['==', '$type', 'LineString'], ['==', 'meta', 'feature']],\n            'paint': {\n              'line-color': '#4eb068',\n              'line-width': ['interpolate', ['linear'], ['zoom'], 12, 2, 18, 12]\n            }\n          }, {\n            'id': 'points-line',\n            'type': 'circle',\n            'filter': ['all', ['==', '$type', 'Point'], ['==', 'meta', 'vertex']],\n            'paint': {\n              'circle-radius': {\n                'base': 1.75,\n                'stops': [[10, 5], [16, 10]]\n              },\n              'circle-color': '#F56960'\n            }\n          }, {\n            'id': 'points-line-mid',\n            'type': 'circle',\n            'filter': ['all', ['==', '$type', 'Point'], ['==', 'meta', 'midpoint']],\n            'paint': {\n              'circle-radius': {\n                'base': 1.75,\n                'stops': [[10, 5], [16, 8]]\n              },\n              'circle-color': '#C46D5E'\n            }\n          }]\n        });\n        map.addControl(draw);\n        const stop_list = [];\n        url = Apiurl + \"/api/routes/data/\" + props.id;\n        axios.get(url).then(res => {\n          const out = res.data;\n          draw.add(out);\n          const points = [];\n\n          for (let i = 0; out.features[0].geometry.coordinates[i]; i++) {\n            points.push(out.features[0].geometry.coordinates[i]);\n          }\n\n          for (let i = 1; out.features[i]; i++) {\n            stop_list.push(out.features[i].properties._id);\n          }\n\n          var bounds = points.reduce(function (bounds, coord) {\n            return bounds.extend(coord);\n          }, new mapboxgl.LngLatBounds(points[0], points[0]));\n          map.fitBounds(bounds, {\n            padding: 50,\n            duration: 0\n          });\n          document.querySelector('.mapboxgl-canvas').style.opacity = '100%';\n          props.on_load();\n        });\n        map.on('click', 'bus_route_stops', function (e) {\n          console.log(stop_list);\n          const coordinates = e.features[0].properties._id;\n          e.features[0].properties.state = 'on';\n\n          let data = map.getSource('bus_route')._data;\n\n          for (let i = 0; data.features[i]; i++) {\n            if (data.features[i].properties._id === coordinates) {\n              if (data.features[i].properties.state === 'on') {\n                data.features[i].properties.state = 'off';\n                stop_list.splice(stop_list.indexOf(data.features[i].properties._id), 1);\n                data.features[i].properties.idx = undefined;\n\n                for (let j = 0; stop_list[j]; j++) {\n                  for (let k = 0; data.features[k]; k++) {\n                    if (data.features[k].properties._id === stop_list[j]) {\n                      data.features[k].properties.idx = j;\n                      data.features[k].properties.state = 'on';\n                    }\n                  }\n                }\n              } else {\n                data.features[i].properties.state = 'on';\n                stop_list.push(data.features[i].properties._id);\n                data.features[i].properties.idx = stop_list.length - 1;\n              }\n            }\n          }\n\n          map.getSource('bus_route').setData(data);\n        });\n        map.on('click', 'bus_route_stops_on ', function (e) {\n          console.log(stop_list);\n          const coordinates = e.features[0].properties._id;\n\n          let data = map.getSource('bus_route')._data;\n\n          for (let i = 0; data.features[i]; i++) {\n            if (data.features[i].properties._id === coordinates) {\n              if (data.features[i].properties.state === 'on') {\n                data.features[i].properties.state = 'off';\n                stop_list.splice(stop_list.indexOf(data.features[i].properties._id), 1);\n                data.features[i].properties.idx = undefined;\n\n                for (let j = 0; stop_list[j]; j++) {\n                  for (let k = 0; data.features[k]; k++) {\n                    if (data.features[k].properties._id === stop_list[j]) {\n                      data.features[k].properties.idx = j;\n                      data.features[k].properties.state = 'on';\n                    }\n                  }\n                }\n              } else {\n                data.features[i].properties.state = 'on';\n                stop_list.push(data.features[i].properties._id);\n                data.features[i].properties.idx = stop_list.length - 1;\n              }\n            }\n          }\n\n          map.getSource('bus_route').setData(data);\n        });\n        map.on('draw.update', function (e) {\n          let data = draw.getAll().features[0];\n          props.updateFunction({\n            route: data,\n            stops: stop_list\n          });\n        });\n      });\n    };\n\n    if (!map) initializeMap({\n      setMap,\n      mapContainer,\n      lat,\n      lng,\n      zoom\n    });\n  }, [map, mapContainer, lat, lng, zoom]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: el => mapContainer.current = el,\n    className: \"mapContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 10\n    }\n  });\n}\n;","map":{"version":3,"sources":["/home/pegatzu/final_proyect_holberton/src/components/Routes/MapRouteEdit.jsx"],"names":["React","useEffect","useRef","useState","mapboxgl","axios","Apiurl","mapboxGlDraw","MapRouteEdit","props","mapContainer","map","setMap","lng","setLng","lat","setLat","zoom","setZoom","accessToken","initializeMap","Map","container","current","style","center","maxPitch","addControl","FullscreenControl","on","removeLayer","url","get","then","res","out","i","data","length","features","push","position","coordinates","_id","undefined","stop_list","j","properties","state","idx","console","log","addSource","type","addLayer","id","source","paint","filter","layout","draw","displayControlsDefault","styles","add","points","geometry","bounds","reduce","coord","extend","LngLatBounds","fitBounds","padding","duration","document","querySelector","opacity","on_load","e","getSource","_data","splice","indexOf","k","setData","getAll","updateFunction","route","stops","el"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport mapboxgl from 'mapbox-gl'\nimport '@mapbox/mapbox-gl-draw/dist/mapbox-gl-draw.css'\nimport '../../style/map.css'\nimport axios from \"axios\";\nimport { Apiurl } from '../../services/apirest';\nimport mapboxGlDraw from \"@mapbox/mapbox-gl-draw\";\nimport '@mapbox/mapbox-gl-draw/dist/mapbox-gl-draw.css'\n\nexport function MapRouteEdit(props) {\n\n  const mapContainer = useRef(null);\n  const [map, setMap] = useState(null);\n  const [lng, setLng] = useState(-56.073358);\n  const [lat, setLat] = useState(-34.791454);\n  const [zoom, setZoom] = useState(11);\n\n\n  useEffect(() => {\n    mapboxgl.accessToken = \"pk.eyJ1IjoiYm9saW9saWFndXN0aW4iLCJhIjoiY2t6eDVzcWY5NDJoNTJucW9xaHY2bXA2dCJ9.ZR3iXpsXSNMjzh9Nj-0EDQ\"\n    const initializeMap = ({ setMap, mapContainer }) => {\n      const map = new mapboxgl.Map({\n        container: mapContainer.current,\n        style: \"mapbox://styles/mapbox/streets-v11\", // stylesheet location\n        center: [lng, lat],\n        zoom: zoom,\n        maxPitch: 60\n      });\n      map.addControl(new mapboxgl.FullscreenControl());\n      map.on('load', function () {\n        map.removeLayer('poi-label');\n        let url = Apiurl + \"/api/stops\"\n        axios.get(url)\n          .then(res => {\n            const out = {\n              \"type\": \"FeatureCollection\",\n              \"features\": []\n            }\n            for (let i = 0; i < res.data.length; i++) {\n              out.features.push({\n                \"type\": \"Feature\",\n                \"geometry\": {\n                  \"type\": \"Point\",\n                  \"coordinates\": res.data[i].position.coordinates\n                },\n                \"properties\": {\n                  \"_id\": res.data[i]._id,\n                  \"state\": \"off\",\n                  \"idx\": undefined\n                }\n              })\n            }\n            if (stop_list) {\n              for (let i = 0; i < stop_list.length; i++) {\n                for (let j = 0; j < out.features.length; j++) {\n                  if (out.features[j].properties._id == stop_list[i]) {\n                    out.features[j].properties.state = \"on\"\n                    out.features[j].properties.idx = i\n                  }\n                }\n                console.log(stop_list[i]);\n              }\n            }\n            map.addSource('bus_route', {\n              type: 'geojson',\n              data: out\n            });\n            map.addLayer({\n              id: 'bus_route_stops',\n              type: 'circle',\n              source: 'bus_route',\n              paint: {\n                'circle-color': '#909090',\n                'circle-radius': [\n                  'interpolate',\n                  ['linear'],\n                  ['zoom'],\n                  12, 0,\n                  18, 12\n                ],\n                \"circle-opacity\": 0.7,\n                \"circle-pitch-alignment\": \"map\"\n              },\n              filter: [\"all\", ['==', '$type', 'Point'], ['==', 'state', 'off']]\n            });\n            map.addLayer({\n              id: 'bus_route_stops_on',\n              type: 'circle',\n              source: 'bus_route',\n              paint: {\n                'circle-color': '#000000',\n                'circle-radius': [\n                  'interpolate',\n                  ['linear'],\n                  ['zoom'],\n                  12, 3,\n                  18, 12\n                ],\n                \"circle-opacity\": 1.0,\n                \"circle-pitch-alignment\": \"map\"\n              },\n              filter: [\"all\", ['==', '$type', 'Point'], ['==', 'state', 'on']]\n            });\n            \n            map.addLayer({\n              id: 'bus_route_stops_order',\n              type: 'symbol',\n              source: 'bus_route',\n              layout: {\n                \"text-field\": \"{idx}\",\n                \"text-anchor\": \"bottom\",\n                \"text-offset\": [0, -0.5],\n                \"text-allow-overlap\": true,\n              },\n              filter: ['==', '$type', 'Point']\n            });\n          });\n        const draw = new mapboxGlDraw({\n          displayControlsDefault: false,\n          styles: [\n            {\n              'id': 'lines',\n              'type': 'line',\n              'filter': ['all',\n                ['==', '$type', 'LineString'],\n                ['==', 'meta', 'feature']],\n              'paint': {\n                'line-color': '#4eb068',\n                'line-width': [\n                  'interpolate',\n                  ['linear'],\n                  ['zoom'],\n                  12, 2,\n                  18, 12\n                ]\n              }\n            },\n            {\n              'id': 'points-line',\n              'type': 'circle',\n              'filter': ['all',\n                ['==', '$type', 'Point'],\n                ['==', 'meta', 'vertex']],\n              'paint': {\n                'circle-radius': {\n                  'base': 1.75,\n                  'stops': [\n                    [10, 5],\n                    [16, 10]\n                  ]\n                },\n                'circle-color': '#F56960'\n              }\n            },\n            {\n              'id': 'points-line-mid',\n              'type': 'circle',\n              'filter': ['all',\n                ['==', '$type', 'Point'],\n                ['==', 'meta', 'midpoint']],\n              'paint': {\n                'circle-radius': {\n                  'base': 1.75,\n                  'stops': [\n                    [10, 5],\n                    [16, 8]\n                  ]\n                },\n                'circle-color': '#C46D5E'\n              }\n            }\n          ]\n        });\n        map.addControl(draw);\n        const stop_list = [];\n        url = Apiurl + \"/api/routes/data/\" + props.id\n        axios.get(url)\n          .then(res => {\n            const out = res.data\n            draw.add(out);\n            const points = []\n            for (let i = 0; out.features[0].geometry.coordinates[i]; i++) {\n              points.push(out.features[0].geometry.coordinates[i])\n            }\n            for (let i = 1; out.features[i]; i++) {\n              stop_list.push(out.features[i].properties._id);\n            }\n            var bounds = points.reduce(function (bounds, coord) {\n              return bounds.extend(coord);\n            }, new mapboxgl.LngLatBounds(points[0], points[0]));\n            map.fitBounds(bounds, {\n              padding: 50,\n              duration: 0\n            });\n            document.querySelector('.mapboxgl-canvas').style.opacity = '100%';\n            props.on_load();\n          })\n          map.on('click', 'bus_route_stops', function (e) {\n            console.log(stop_list);\n            const coordinates = e.features[0].properties._id;\n            e.features[0].properties.state = 'on';\n            let data = map.getSource('bus_route')._data;\n            for (let i = 0; data.features[i]; i++) {\n              if (data.features[i].properties._id === coordinates) {\n                if (data.features[i].properties.state === 'on') {\n                  data.features[i].properties.state = 'off';\n                  stop_list.splice(stop_list.indexOf(data.features[i].properties._id), 1);\n                  data.features[i].properties.idx = undefined;\n                  for (let j = 0; stop_list[j]; j++) {\n                    for (let k = 0; data.features[k]; k++) {\n                      if (data.features[k].properties._id === stop_list[j]) {\n                        data.features[k].properties.idx = j;\n                        data.features[k].properties.state = 'on';\n                      }\n                    }\n                  }\n                } else {\n                  data.features[i].properties.state = 'on';\n                  stop_list.push(data.features[i].properties._id);\n                  data.features[i].properties.idx = stop_list.length - 1;\n                }\n              }\n            }\n            map.getSource('bus_route').setData(data);\n            \n          });\n          map.on('click', 'bus_route_stops_on ', function (e) {\n            console.log(stop_list);\n            const coordinates = e.features[0].properties._id;\n            let data = map.getSource('bus_route')._data;\n            for (let i = 0; data.features[i]; i++) {\n              if (data.features[i].properties._id === coordinates) {\n                if (data.features[i].properties.state === 'on') {\n                  data.features[i].properties.state = 'off';\n                  stop_list.splice(stop_list.indexOf(data.features[i].properties._id), 1);\n                  data.features[i].properties.idx = undefined;\n                  for (let j = 0; stop_list[j]; j++) {\n                    for (let k = 0; data.features[k]; k++) {\n                      if (data.features[k].properties._id === stop_list[j]) {\n                        data.features[k].properties.idx = j;\n                        data.features[k].properties.state = 'on';\n                      }\n                    }\n                  }\n                } else {\n                  data.features[i].properties.state = 'on';\n                  stop_list.push(data.features[i].properties._id);\n                  data.features[i].properties.idx = stop_list.length - 1;\n                }\n              }\n            }\n            map.getSource('bus_route').setData(data);\n          });\n\n        map.on('draw.update', function (e) {\n          let data = draw.getAll().features[0];\n          props.updateFunction({\n            route: data,\n            stops: stop_list\n          });\n        });\n      });\n    };\n\n    if (!map) initializeMap({ setMap, mapContainer, lat, lng, zoom });\n  }, [map, mapContainer, lat, lng, zoom]);\n  return <div ref={el => (mapContainer.current = el)} className=\"mapContainer\" />;\n};\n\n\n"]},"metadata":{},"sourceType":"module"}