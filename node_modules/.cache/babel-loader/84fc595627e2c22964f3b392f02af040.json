{"ast":null,"code":"var _jsxFileName = \"/home/pegatzu/final_proyect_holberton/src/components/Routes/MapRouteEdit.jsx\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport mapboxgl from 'mapbox-gl';\nimport '@mapbox/mapbox-gl-draw/dist/mapbox-gl-draw.css';\nimport '../../style/map.css';\nimport axios from \"axios\";\nimport { Apiurl } from '../../services/apirest';\nimport mapboxGlDraw from \"@mapbox/mapbox-gl-draw\";\nimport '@mapbox/mapbox-gl-draw/dist/mapbox-gl-draw.css';\nexport function MapRouteEdit(props) {\n  const mapContainer = useRef(null);\n  const [map, setMap] = useState(null);\n  const [lng, setLng] = useState(-56.073358);\n  const [lat, setLat] = useState(-34.791454);\n  const [zoom, setZoom] = useState(11);\n  useEffect(() => {\n    mapboxgl.accessToken = \"pk.eyJ1IjoiYm9saW9saWFndXN0aW4iLCJhIjoiY2t6eDVzcWY5NDJoNTJucW9xaHY2bXA2dCJ9.ZR3iXpsXSNMjzh9Nj-0EDQ\";\n\n    const initializeMap = _ref => {\n      let {\n        setMap,\n        mapContainer\n      } = _ref;\n      const map = new mapboxgl.Map({\n        container: mapContainer.current,\n        style: \"mapbox://styles/mapbox/streets-v11\",\n        // stylesheet location\n        center: [lng, lat],\n        zoom: zoom,\n        maxPitch: 60\n      });\n      map.addControl(new mapboxgl.FullscreenControl());\n      map.on('load', function () {\n        map.removeLayer('poi-label');\n        let url = Apiurl + \"/api/stops\";\n        axios.get(url).then(res => {\n          const out = {\n            \"type\": \"FeatureCollection\",\n            \"features\": []\n          };\n\n          for (let i = 0; i < res.data.length; i++) {\n            out.features.push({\n              \"type\": \"Feature\",\n              \"geometry\": {\n                \"type\": \"Point\",\n                \"coordinates\": res.data[i].position.coordinates\n              },\n              \"properties\": {\n                \"_id\": res.data[i]._id,\n                \"state\": \"off\"\n              }\n            });\n          }\n\n          map.addSource('bus_route', {\n            type: 'geojson',\n            data: out\n          });\n          map.addLayer({\n            id: 'bus_route_stops',\n            type: 'circle',\n            source: 'bus_route',\n            paint: {\n              'circle-color': ['match', ['get', 'state'], 'off', '#2626d3', '#d32f2f'],\n              'circle-radius': {\n                'base': 1.75,\n                'stops': [[12, 0], [16, 8]]\n              },\n              \"circle-opacity\": 0.7,\n              \"circle-pitch-alignment\": \"map\"\n            },\n            filter: ['==', '$type', 'Point']\n          });\n        });\n        const draw = new mapboxGlDraw({\n          displayControlsDefault: false,\n          styles: [{\n            'id': 'lines',\n            'type': 'line',\n            'filter': ['all', ['==', '$type', 'LineString'], ['==', 'meta', 'feature']],\n            'paint': {\n              'line-color': '#4eb068',\n              'line-width': ['interpolate', ['linear'], ['zoom'], 12, 5, 18, 12]\n            }\n          }, {\n            'id': 'points-line',\n            'type': 'circle',\n            'filter': ['all', ['==', '$type', 'Point'], ['==', 'meta', 'vertex']],\n            'paint': {\n              'circle-radius': {\n                'base': 1.75,\n                'stops': [[10, 5], [16, 10]]\n              },\n              'circle-color': '#F56960'\n            }\n          }, {\n            'id': 'points-line-mid',\n            'type': 'circle',\n            'filter': ['all', ['==', '$type', 'Point'], ['==', 'meta', 'midpoint']],\n            'paint': {\n              'circle-radius': {\n                'base': 1.75,\n                'stops': [[10, 5], [16, 8]]\n              },\n              'circle-color': '#C46D5E'\n            }\n          }]\n        });\n        map.addControl(draw);\n        url = Apiurl + \"/api/routes/data/\" + props.id;\n        axios.get(url).then(res => {\n          const out = res.data;\n          draw.add(out);\n          const points = [];\n\n          for (let i = 1; out.features[0].geometry.coordinates[i]; i++) {\n            points.push(out.features[0].geometry.coordinates[i]);\n          }\n\n          var bounds = points.reduce(function (bounds, coord) {\n            return bounds.extend(coord);\n          }, new mapboxgl.LngLatBounds(points[0], points[0]));\n          map.fitBounds(bounds, {\n            padding: 50,\n            duration: 0\n          });\n          document.querySelector('.mapboxgl-canvas').style.opacity = '100%';\n          props.on_load();\n        });\n        map.on('click', 'bus_route_stops', function (e) {\n          const coordinates = e.features[0].properties._id;\n          e.features[0].properties.state = 'on';\n          map.getSource('bus_route').setData(e.features);\n          console.log(coordinates);\n        });\n        map.on('draw.update', function (e) {\n          let data = draw.getAll().features[0];\n          props.updateFunction(data);\n        });\n      });\n    };\n\n    if (!map) initializeMap({\n      setMap,\n      mapContainer,\n      lat,\n      lng,\n      zoom\n    });\n  }, [map, mapContainer, lat, lng, zoom]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: el => mapContainer.current = el,\n    className: \"mapContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 10\n    }\n  });\n}\n;","map":{"version":3,"sources":["/home/pegatzu/final_proyect_holberton/src/components/Routes/MapRouteEdit.jsx"],"names":["React","useEffect","useRef","useState","mapboxgl","axios","Apiurl","mapboxGlDraw","MapRouteEdit","props","mapContainer","map","setMap","lng","setLng","lat","setLat","zoom","setZoom","accessToken","initializeMap","Map","container","current","style","center","maxPitch","addControl","FullscreenControl","on","removeLayer","url","get","then","res","out","i","data","length","features","push","position","coordinates","_id","addSource","type","addLayer","id","source","paint","filter","draw","displayControlsDefault","styles","add","points","geometry","bounds","reduce","coord","extend","LngLatBounds","fitBounds","padding","duration","document","querySelector","opacity","on_load","e","properties","state","getSource","setData","console","log","getAll","updateFunction","el"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport mapboxgl from 'mapbox-gl'\nimport '@mapbox/mapbox-gl-draw/dist/mapbox-gl-draw.css'\nimport '../../style/map.css'\nimport axios from \"axios\";\nimport { Apiurl } from '../../services/apirest';\nimport mapboxGlDraw from \"@mapbox/mapbox-gl-draw\";\nimport '@mapbox/mapbox-gl-draw/dist/mapbox-gl-draw.css'\n\nexport function MapRouteEdit(props) {\n\n  const mapContainer = useRef(null);\n  const [map, setMap] = useState(null);\n  const [lng, setLng] = useState(-56.073358);\n  const [lat, setLat] = useState(-34.791454);\n  const [zoom, setZoom] = useState(11);\n\n\n  useEffect(() => {\n    mapboxgl.accessToken = \"pk.eyJ1IjoiYm9saW9saWFndXN0aW4iLCJhIjoiY2t6eDVzcWY5NDJoNTJucW9xaHY2bXA2dCJ9.ZR3iXpsXSNMjzh9Nj-0EDQ\"\n    const initializeMap = ({ setMap, mapContainer }) => {\n      const map = new mapboxgl.Map({\n        container: mapContainer.current,\n        style: \"mapbox://styles/mapbox/streets-v11\", // stylesheet location\n        center: [lng, lat],\n        zoom: zoom,\n        maxPitch: 60\n      });\n      map.addControl(new mapboxgl.FullscreenControl());\n      map.on('load', function () {\n        map.removeLayer('poi-label');\n        let url = Apiurl + \"/api/stops\"\n        axios.get(url)\n          .then(res => {\n            const out = {\n              \"type\": \"FeatureCollection\",\n              \"features\": []\n            }\n            for (let i = 0; i < res.data.length; i++) {\n              out.features.push({\n                \"type\": \"Feature\",\n                \"geometry\": {\n                  \"type\": \"Point\",\n                  \"coordinates\": res.data[i].position.coordinates\n                },\n                \"properties\": {\n                  \"_id\": res.data[i]._id,\n                  \"state\": \"off\"\n                }\n              })\n            }\n            map.addSource('bus_route', {\n              type: 'geojson',\n              data: out\n            });\n            map.addLayer({\n              id: 'bus_route_stops',\n              type: 'circle',\n              source: 'bus_route',\n              paint: {\n                'circle-color': [\n                  'match',\n                  ['get', 'state'],\n                  'off', '#2626d3',\n                  '#d32f2f'\n                ],\n                'circle-radius': {\n                  'base': 1.75,\n                  'stops': [\n                    [12, 0],\n                    [16, 8]\n                  ]\n                },\n                \"circle-opacity\": 0.7,\n                \"circle-pitch-alignment\": \"map\"\n              },\n              filter: ['==', '$type', 'Point']\n            });\n          });\n        const draw = new mapboxGlDraw({\n          displayControlsDefault: false,\n          styles: [\n            {\n              'id': 'lines',\n              'type': 'line',\n              'filter': ['all',\n              ['==', '$type', 'LineString'],\n              ['==', 'meta', 'feature']],\n              'paint': {\n                'line-color': '#4eb068',\n                'line-width': [\n                  'interpolate',\n                  ['linear'],\n                  ['zoom'],\n                  12, 5,\n                  18, 12\n                ]\n              }\n            },\n              {\n                'id': 'points-line',\n                'type': 'circle',\n                'filter': ['all',\n                ['==', '$type', 'Point'],\n                ['==', 'meta', 'vertex']],\n                'paint': {\n                  'circle-radius': {\n                    'base': 1.75,\n                    'stops': [\n                      [10, 5],\n                      [16, 10]\n                    ]\n                  },\n                  'circle-color': '#F56960'\n                }\n              },\n              {\n                'id': 'points-line-mid',\n                'type': 'circle',\n                'filter': ['all',\n                ['==', '$type', 'Point'],\n                ['==', 'meta', 'midpoint']],\n                'paint': {\n                  'circle-radius': {\n                    'base': 1.75,\n                    'stops': [\n                      [10, 5],\n                      [16, 8]\n                    ]\n                  },\n                  'circle-color': '#C46D5E'\n                }\n            }\n          ]\n        });\n        map.addControl(draw);\n        url = Apiurl + \"/api/routes/data/\" + props.id\n        axios.get(url)\n        .then(res => {\n          const out = res.data\n          draw.add(out);\n          const points = []\n          for (let i = 1; out.features[0].geometry.coordinates[i]; i++) {\n            points.push(out.features[0].geometry.coordinates[i])\n          }\n          var bounds = points.reduce(function (bounds, coord) {\n            return bounds.extend(coord);\n          }, new mapboxgl.LngLatBounds(points[0], points[0]));\n          map.fitBounds(bounds, {\n            padding: 50,\n            duration: 0\n          });\n          document.querySelector('.mapboxgl-canvas').style.opacity = '100%';\n          props.on_load();\n        })\n        map.on('click', 'bus_route_stops', function (e) {\n          const coordinates = e.features[0].properties._id;\n          e.features[0].properties.state = 'on';\n          map.getSource('bus_route').setData(e.features);\n          console.log(coordinates)\n        });\n\n        map.on('draw.update', function (e) {\n          let data = draw.getAll().features[0];\n          props.updateFunction(data);\n        });\n      });\n    };\n\n    if (!map) initializeMap({ setMap, mapContainer, lat, lng, zoom });\n  }, [map, mapContainer, lat, lng, zoom]);\n  return <div ref={el => (mapContainer.current = el)} className=\"mapContainer\" />;\n};\n\n\n"]},"metadata":{},"sourceType":"module"}