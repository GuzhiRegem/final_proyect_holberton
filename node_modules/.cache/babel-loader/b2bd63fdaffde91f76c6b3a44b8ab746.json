{"ast":null,"code":"var _jsxFileName = \"/home/seba/code/final_proyect_holberton/src/components/Buses/MapBusesView.jsx\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport mapboxgl from 'mapbox-gl';\nimport '@mapbox/mapbox-gl-draw/dist/mapbox-gl-draw.css';\nimport '../../style/map.css';\nimport axios from \"axios\";\nimport { Apiurl } from '../../services/apirest';\nexport function MapBusesView(id) {\n  const mapContainer = useRef(null);\n  const [map, setMap] = useState(null);\n  const [lng, setLng] = useState(-56.073358);\n  const [lat, setLat] = useState(-34.791454);\n  const [zoom, setZoom] = useState(11);\n  useEffect(() => {\n    mapboxgl.accessToken = \"pk.eyJ1IjoiYm9saW9saWFndXN0aW4iLCJhIjoiY2t6eDVzcWY5NDJoNTJucW9xaHY2bXA2dCJ9.ZR3iXpsXSNMjzh9Nj-0EDQ\";\n\n    const initializeMap = _ref => {\n      let {\n        setMap,\n        mapContainer\n      } = _ref;\n      const map = new mapboxgl.Map({\n        container: mapContainer.current,\n        style: \"mapbox://styles/mapbox/streets-v11\",\n        center: [lng, lat],\n        zoom: zoom,\n        pitch: 45,\n        maxPitch: 60\n      });\n      map.addControl(new mapboxgl.FullscreenControl());\n      axios.get(Apiurl + \"/api/buses/get/\" + id.id).then(res_bus => {\n        axios.get(Apiurl + \"/api/routes/data/\" + res_bus.data.route).then(res => {\n          console.log(res.data);\n          map.addSource('bus_route', {\n            type: 'geojson',\n            data: res.data\n          });\n          map.addLayer({\n            id: 'bus_route_line',\n            type: 'line',\n            source: 'bus_route',\n            layout: {\n              'line-join': 'round',\n              'line-cap': 'round'\n            },\n            paint: {\n              'line-color': '#4eb068',\n              'line-width': 8\n            },\n            filter: ['==', '$type', 'LineString']\n          });\n          map.addLayer({\n            id: 'bus_route_stops',\n            type: 'circle',\n            source: 'bus_route',\n            paint: {\n              'circle-radius': 10,\n              'circle-color': '#4eb068'\n            },\n            filter: ['==', '$type', 'Point']\n          });\n          const points = [];\n\n          for (let i = 1; res.data.features[0].geometry.coordinates[i]; i++) {\n            points.push(res.data.features[0].geometry.coordinates[i]);\n          }\n\n          var bounds = points.reduce(function (bounds, coord) {\n            return bounds.extend(coord);\n          }, new mapboxgl.LngLatBounds(points[0], points[0]));\n          map.fitBounds(bounds, {\n            padding: 50,\n            duration: 0\n          });\n        });\n        document.querySelector('.mapboxgl-canvas').style.opacity = '100%';\n      });\n      map.on('load', function () {\n        id.on_load();\n      });\n    };\n\n    if (!map) initializeMap({\n      setMap,\n      mapContainer,\n      lat,\n      lng,\n      zoom\n    });\n  }, [map, mapContainer, lat, lng, zoom]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: el => mapContainer.current = el,\n    className: \"mapContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 10\n    }\n  });\n}\n;","map":{"version":3,"sources":["/home/seba/code/final_proyect_holberton/src/components/Buses/MapBusesView.jsx"],"names":["React","useEffect","useRef","useState","mapboxgl","axios","Apiurl","MapBusesView","id","mapContainer","map","setMap","lng","setLng","lat","setLat","zoom","setZoom","accessToken","initializeMap","Map","container","current","style","center","pitch","maxPitch","addControl","FullscreenControl","get","then","res_bus","data","route","res","console","log","addSource","type","addLayer","source","layout","paint","filter","points","i","features","geometry","coordinates","push","bounds","reduce","coord","extend","LngLatBounds","fitBounds","padding","duration","document","querySelector","opacity","on","on_load","el"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport mapboxgl from 'mapbox-gl'\nimport '@mapbox/mapbox-gl-draw/dist/mapbox-gl-draw.css'\nimport '../../style/map.css';\nimport axios from \"axios\";\nimport { Apiurl } from '../../services/apirest';\n\nexport function MapBusesView(id) {\n\n  const mapContainer = useRef(null);\n  const [map, setMap] = useState(null);\n  const [lng, setLng] = useState(-56.073358);\n  const [lat, setLat] = useState(-34.791454);\n  const [zoom, setZoom] = useState(11);\n\n  useEffect(() => {\n    mapboxgl.accessToken = \"pk.eyJ1IjoiYm9saW9saWFndXN0aW4iLCJhIjoiY2t6eDVzcWY5NDJoNTJucW9xaHY2bXA2dCJ9.ZR3iXpsXSNMjzh9Nj-0EDQ\"\n    const initializeMap = ({ setMap, mapContainer }) => {\n      const map = new mapboxgl.Map({\n        container: mapContainer.current,\n        style: \"mapbox://styles/mapbox/streets-v11\",\n        center: [lng, lat],\n        zoom: zoom,\n        pitch: 45,\n        maxPitch: 60\n      });\n      map.addControl(new mapboxgl.FullscreenControl());\n      axios.get(Apiurl + \"/api/buses/get/\" + id.id)\n        .then(res_bus => {\n          axios.get(Apiurl + \"/api/routes/data/\" + res_bus.data.route)\n            .then(res => {\n              console.log(res.data);\n              map.addSource('bus_route', {\n                type: 'geojson',\n                data: res.data\n              });\n\n              map.addLayer({\n                id: 'bus_route_line',\n                type: 'line',\n                source: 'bus_route',\n                layout: {\n                  'line-join': 'round',\n                  'line-cap': 'round'\n                },\n                paint: {\n                  'line-color': '#4eb068',\n                  'line-width': 8\n                },\n                filter: ['==', '$type', 'LineString']\n              });\n\n              map.addLayer({\n                id: 'bus_route_stops',\n                type: 'circle',\n                source: 'bus_route',\n                paint: {\n                  'circle-radius': 10,\n                  'circle-color': '#4eb068'\n                },\n                filter: ['==', '$type', 'Point']\n              });\n              const points = []\n              for (let i = 1; res.data.features[0].geometry.coordinates[i]; i++) {\n                points.push(res.data.features[0].geometry.coordinates[i])\n              }\n              var bounds = points.reduce(function (bounds, coord) {\n                return bounds.extend(coord);\n              }, new mapboxgl.LngLatBounds(points[0], points[0]));\n              map.fitBounds(bounds, {\n                padding: 50,\n                duration: 0\n              });\n            });\n          document.querySelector('.mapboxgl-canvas').style.opacity = '100%';\n        });\n      map.on('load', function () {\n        id.on_load();\n      });\n    };\n\n    if (!map) initializeMap({ setMap, mapContainer, lat, lng, zoom });\n  }, [map, mapContainer, lat, lng, zoom]);\n  return <div ref={el => (mapContainer.current = el)} className=\"mapContainer\" />;\n};\n\n\n"]},"metadata":{},"sourceType":"module"}