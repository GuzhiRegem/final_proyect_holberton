{"ast":null,"code":"import Base from '../Base/Base';\nexport default class TooltipControl extends Base {\n  constructor(options) {\n    super();\n\n    if (typeof (options === null || options === void 0 ? void 0 : options.getContent) !== 'function') {\n      throw Error('getContent function must be defined');\n    }\n\n    this.layer = options === null || options === void 0 ? void 0 : options.layer;\n    this.getContent = options === null || options === void 0 ? void 0 : options.getContent;\n    this.container = document.createElement('div');\n    this.eventShow = this.layer ? 'mouseenter' : 'mouseover';\n    this.eventHide = this.layer ? 'mouseleave' : 'mouseout';\n    this.node = document.createElement('div');\n    this.node.classList.add('mapbox-control-tooltip');\n    this.lngLat = null;\n    this.cursorStyle = '';\n    this.show = this.show.bind(this);\n    this.move = this.move.bind(this);\n    this.hide = this.hide.bind(this);\n    this.updatePosition = this.updatePosition.bind(this);\n  }\n\n  show() {\n    this.mapContainer.appendChild(this.node);\n    this.cursorStyle = this.mapCanvas.style.cursor;\n    this.mapCanvas.style.cursor = 'pointer';\n    this.map.on('move', this.updatePosition);\n  }\n\n  hide() {\n    this.node.innerHTML = '';\n    this.mapContainer.removeChild(this.node);\n    this.mapCanvas.style.cursor = this.cursorStyle;\n    this.map.off('move', this.updatePosition);\n  }\n\n  move(event) {\n    this.node.innerHTML = this.getContent(event);\n    this.lngLat = event.lngLat;\n    this.updatePosition();\n  }\n\n  updatePosition() {\n    if (!this.lngLat) return;\n    const pos = this.map.project(this.lngLat);\n    this.node.style.left = `${pos.x}px`;\n    this.node.style.top = `${pos.y}px`;\n  }\n\n  onAddControl() {\n    this.mapContainer = this.map.getContainer();\n    this.mapCanvas = this.map.getCanvas();\n\n    if (this.layer) {\n      this.map.on(this.eventShow, this.layer, this.show);\n      this.map.on('mousemove', this.layer, this.move);\n      this.map.on(this.eventHide, this.layer, this.hide);\n    } else {\n      this.map.on(this.eventShow, this.show);\n      this.map.on('mousemove', this.move);\n      this.map.on(this.eventHide, this.hide);\n    }\n  }\n\n  onRemoveControl() {\n    if (this.layer) {\n      this.map.off(this.eventShow, this.layer, this.show);\n      this.map.off('mousemove', this.layer, this.move);\n      this.map.off(this.eventHide, this.layer, this.hide);\n    } else {\n      this.map.off(this.eventShow, this.show);\n      this.map.off('mousemove', this.move);\n      this.map.off(this.eventHide, this.hide);\n    }\n\n    this.hide();\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}