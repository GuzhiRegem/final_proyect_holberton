{"ast":null,"code":"var _jsxFileName = \"/home/pegatzu/final_proyect_holberton/src/components/Routes/MapRouteView.jsx\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport mapboxgl from 'mapbox-gl';\nimport '@mapbox/mapbox-gl-draw/dist/mapbox-gl-draw.css';\nimport '../style/map.css';\nimport axios from \"axios\";\nimport { Apiurl } from '../../services/apirest';\nexport function MapRouteView(id) {\n  const mapContainer = useRef(null);\n  const [map, setMap] = useState(null);\n  const [lng, setLng] = useState(-56.073358);\n  const [lat, setLat] = useState(-34.791454);\n  const [zoom, setZoom] = useState(11);\n  useEffect(() => {\n    mapboxgl.accessToken = \"pk.eyJ1IjoiYm9saW9saWFndXN0aW4iLCJhIjoiY2t6eDVzcWY5NDJoNTJucW9xaHY2bXA2dCJ9.ZR3iXpsXSNMjzh9Nj-0EDQ\";\n\n    const initializeMap = _ref => {\n      let {\n        setMap,\n        mapContainer\n      } = _ref;\n      const map = new mapboxgl.Map({\n        container: mapContainer.current,\n        style: \"mapbox://styles/mapbox/streets-v11\",\n        // stylesheet location\n        center: [lng, lat],\n        zoom: zoom,\n        pitch: 45,\n        maxPitch: 60\n      });\n      map.addControl(new mapboxgl.FullscreenControl());\n      let url = Apiurl + \"/api/routes/data/\" + id.id;\n      axios.get(url).then(res => {\n        const out = res.data;\n        map.addSource('bus_route', {\n          type: 'geojson',\n          data: out\n        });\n        map.addLayer({\n          id: 'bus_route_line',\n          type: 'line',\n          source: 'bus_route',\n          layout: {\n            'line-join': 'round',\n            'line-cap': 'round'\n          },\n          paint: {\n            'line-color': '#4eb068',\n            'line-width': 8\n          },\n          filter: ['==', '$type', 'LineString']\n        });\n        map.addLayer({\n          id: 'bus_route_stops',\n          type: 'circle',\n          source: 'bus_route',\n          paint: {\n            'circle-radius': 10,\n            'circle-color': '#4eb068'\n          },\n          filter: ['==', '$type', 'Point']\n        });\n        const points = [];\n\n        for (let i = 1; i < out.features.length; i++) {\n          points.push(out.features[i].geometry.coordinates);\n        }\n\n        var bounds = points.reduce(function (bounds, coord) {\n          return bounds.extend(coord);\n        }, new mapboxgl.LngLatBounds(points[0], points[0]));\n        map.fitBounds(bounds, {\n          padding: 100,\n          duration: 0\n        });\n      });\n    };\n\n    if (!map) initializeMap({\n      setMap,\n      mapContainer,\n      lat,\n      lng,\n      zoom\n    });\n  }, [map, mapContainer, lat, lng, zoom]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: el => mapContainer.current = el,\n    className: \"mapContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 10\n    }\n  });\n}\n;","map":{"version":3,"sources":["/home/pegatzu/final_proyect_holberton/src/components/Routes/MapRouteView.jsx"],"names":["React","useEffect","useRef","useState","mapboxgl","axios","Apiurl","MapRouteView","id","mapContainer","map","setMap","lng","setLng","lat","setLat","zoom","setZoom","accessToken","initializeMap","Map","container","current","style","center","pitch","maxPitch","addControl","FullscreenControl","url","get","then","res","out","data","addSource","type","addLayer","source","layout","paint","filter","points","i","features","length","push","geometry","coordinates","bounds","reduce","coord","extend","LngLatBounds","fitBounds","padding","duration","el"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport mapboxgl from 'mapbox-gl'\nimport '@mapbox/mapbox-gl-draw/dist/mapbox-gl-draw.css'\nimport '../style/map.css'\nimport axios from \"axios\";\nimport { Apiurl } from '../../services/apirest';\n\nexport function MapRouteView(id) {\n\n  const mapContainer = useRef(null);\n  const [map, setMap] = useState(null);\n  const [lng, setLng] = useState(-56.073358);\n  const [lat, setLat] = useState(-34.791454);\n  const [zoom, setZoom] = useState(11);\n\n\n  useEffect(() => {\n    mapboxgl.accessToken = \"pk.eyJ1IjoiYm9saW9saWFndXN0aW4iLCJhIjoiY2t6eDVzcWY5NDJoNTJucW9xaHY2bXA2dCJ9.ZR3iXpsXSNMjzh9Nj-0EDQ\"\n    const initializeMap = ({ setMap, mapContainer }) => {\n      const map = new mapboxgl.Map({\n        container: mapContainer.current,\n        style: \"mapbox://styles/mapbox/streets-v11\", // stylesheet location\n        center: [lng, lat],\n        zoom: zoom,\n        pitch: 45,\n        maxPitch: 60\n      });\n      map.addControl(new mapboxgl.FullscreenControl());\n      let url = Apiurl + \"/api/routes/data/\" + id.id\n      axios.get(url)\n        .then(res => {\n          const out = res.data\n          map.addSource('bus_route', {\n            type: 'geojson',\n            data: out\n          });\n\n          map.addLayer({\n            id: 'bus_route_line',\n            type: 'line',\n            source: 'bus_route',\n            layout: {\n              'line-join': 'round',\n              'line-cap': 'round'\n            },\n            paint: {\n              'line-color': '#4eb068',\n              'line-width': 8\n            },\n            filter: ['==', '$type', 'LineString']\n          });\n\n          map.addLayer({\n            id: 'bus_route_stops',\n            type: 'circle',\n            source: 'bus_route',\n            paint: {\n              'circle-radius': 10,\n              'circle-color': '#4eb068'\n            },\n            filter: ['==', '$type', 'Point']\n          });\n          const points = []\n          for (let i = 1; i < out.features.length; i++) {\n            points.push(out.features[i].geometry.coordinates)\n          }\n          var bounds = points.reduce(function (bounds, coord) {\n            return bounds.extend(coord);\n          }, new mapboxgl.LngLatBounds(points[0], points[0]));\n          map.fitBounds(bounds, {\n            padding: 100,\n            duration: 0\n          });\n        })\n    };\n\n    if (!map) initializeMap({ setMap, mapContainer, lat, lng, zoom });\n  }, [map, mapContainer, lat, lng, zoom]);\n  return <div ref={el => (mapContainer.current = el)} className=\"mapContainer\" />;\n};\n\n\n"]},"metadata":{},"sourceType":"module"}