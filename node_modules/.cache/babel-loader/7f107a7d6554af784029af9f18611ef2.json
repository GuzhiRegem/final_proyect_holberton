{"ast":null,"code":"var _jsxFileName = \"/home/pegatzus/react-prueba-proyecto/src/Pages/Map.jsx\";\nimport React, { useEffect } from 'react';\nimport { maplibregl } from 'maplibre-gl';\nimport { RulerControl, StylesControl, ZoomControl, CompassControl } from 'mapbox-gl-controls';\nexport function MapView() {\n  const domain = 'localhost:';\n  const [lng] = useState(-56.15);\n  const [lat] = useState(-34.87);\n  const [zoom] = useState(11); // Initialize map when component mounts\n\n  useEffect(() => {\n    const map = new maplibregl.Map({\n      container: 'map',\n      // container id\n      style: 'https://basemaps.cartocdn.com/gl/dark-matter-gl-style/style.json',\n      // stylesheet location\n      center: [-56.073358, -34.791454],\n      zoom: 15.0,\n      minPitch: 40,\n      maxPitch: 40,\n      pitch: 40,\n      bearing: 0.5\n    });\n  });\n  map.on('move', () => {\n    setLng(map.getCenter().lng.toFixed(4));\n    setLat(map.getCenter().lat.toFixed(4));\n    setZoom(map.getZoom().toFixed(2));\n  }); // Add ruler control\n\n  map.addControl(new RulerControl(), 'bottom-right');\n  map.on('ruler.on', () => console.log('%cruler.on', 'color: #3D5AFE'));\n  map.on('ruler.off', () => console.log('%cruler.off', 'color: #3D5AFE')); // with custom styles:\n\n  map.addControl(new StylesControl({\n    styles: [{\n      label: 'Streets',\n      styleName: 'Mapbox Streets',\n      styleUrl: 'mapbox://styles/mapbox/outdoors-v11'\n    }, {\n      label: 'Satellite',\n      styleName: 'Satellite',\n      styleUrl: 'mapbox://styles/mapbox/satellite-v9'\n    }],\n    onChange: style => console.log(style)\n  }), 'top-left'); // Add zoom control\n\n  map.addControl(new ZoomControl(), 'bottom-right'); // Add compass control\n\n  map.addControl(new CompassControl(), 'bottom-right'); // Render map\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"map\",\n    style: {\n      height: '100vh',\n      width: '100vw'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  });\n}","map":{"version":3,"sources":["/home/pegatzus/react-prueba-proyecto/src/Pages/Map.jsx"],"names":["React","useEffect","maplibregl","RulerControl","StylesControl","ZoomControl","CompassControl","MapView","domain","lng","useState","lat","zoom","map","Map","container","style","center","minPitch","maxPitch","pitch","bearing","on","setLng","getCenter","toFixed","setLat","setZoom","getZoom","addControl","console","log","styles","label","styleName","styleUrl","onChange","height","width"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { maplibregl } from 'maplibre-gl';\nimport { RulerControl, StylesControl, ZoomControl, CompassControl } from 'mapbox-gl-controls';\n\n\nexport function MapView(){\n  const domain = 'localhost:'; \n  const [lng] = useState(-56.15);\n  const [lat] = useState(-34.87);\n  const [zoom] = useState(11);\n\n  // Initialize map when component mounts\n  useEffect(() => {\n  const map = new maplibregl.Map({\n    container: 'map', // container id\n    style: 'https://basemaps.cartocdn.com/gl/dark-matter-gl-style/style.json', // stylesheet location\n    center: [-56.073358, -34.791454],\n    zoom: 15.0,\n    minPitch: 40,\n    maxPitch: 40,\n    pitch: 40,\n    bearing: 0.5\n    });\n  });\n  \n     map.on('move', () => {\n        setLng(map.getCenter().lng.toFixed(4));\n        setLat(map.getCenter().lat.toFixed(4));\n        setZoom(map.getZoom().toFixed(2));\n      });\n\n\n    // Add ruler control\n    map.addControl(new RulerControl(), 'bottom-right');\n    map.on('ruler.on', () => console.log('%cruler.on', 'color: #3D5AFE'));\n    map.on('ruler.off', () => console.log('%cruler.off', 'color: #3D5AFE'));\n    \n    // with custom styles:\n    map.addControl(new StylesControl({\n      styles: [\n        {\n          label: 'Streets',\n          styleName: 'Mapbox Streets',\n          styleUrl: 'mapbox://styles/mapbox/outdoors-v11',\n        }, {\n          label: 'Satellite',\n          styleName: 'Satellite',\n          styleUrl: 'mapbox://styles/mapbox/satellite-v9',\n        },\n      ],\n      onChange: (style) => console.log(style),\n    }), 'top-left');\n\n    // Add zoom control\n    map.addControl(new ZoomControl(), 'bottom-right');\n\n    // Add compass control\n    map.addControl(new CompassControl(), 'bottom-right');\n  \n    // Render map\n    return ( \n      <div id=\"map\" style={{ height: '100vh', width: '100vw' }} />\n    );\n  }\n  "]},"metadata":{},"sourceType":"module"}