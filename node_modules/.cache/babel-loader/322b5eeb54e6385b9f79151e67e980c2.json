{"ast":null,"code":"import { LngLat } from 'mapbox-gl';\nimport { Cursor, Visibility } from './types';\nimport { contourLayer, shadowLayer } from './layers';\nexport default function moveable(map, image, onUpdate) {\n  const mapCanvas = map.getCanvas();\n  let startPosition = null;\n  map.addLayer(Object.assign(Object.assign({}, contourLayer), {\n    source: image.polygonSource.id\n  }));\n  map.addLayer(Object.assign(Object.assign({}, shadowLayer), {\n    source: image.polygonSource.id\n  }));\n\n  function onPointerMove(event) {\n    const currentPosition = event.lngLat;\n    const deltaLng = startPosition.lng - currentPosition.lng;\n    const deltaLat = startPosition.lat - currentPosition.lat;\n    onUpdate(image.position.map(p => new LngLat(p.lng - deltaLng, p.lat - deltaLat)));\n    startPosition = currentPosition;\n  }\n\n  function onPointerUp() {\n    mapCanvas.style.cursor = Cursor.Move;\n    map.off('mousemove', onPointerMove);\n    map.setLayoutProperty(contourLayer.id, 'visibility', Visibility.Visible);\n  }\n\n  function onPointerDown(event) {\n    event.preventDefault();\n    startPosition = event.lngLat;\n    mapCanvas.style.cursor = Cursor.Grabbing;\n    map.on('mousemove', onPointerMove);\n    map.setLayoutProperty(contourLayer.id, 'visibility', Visibility.None);\n    document.addEventListener('pointerup', onPointerUp, {\n      once: true\n    });\n  }\n\n  function onPointerEnter() {\n    mapCanvas.style.cursor = Cursor.Move;\n  }\n\n  function onPointerLeave() {\n    mapCanvas.style.cursor = '';\n  }\n\n  map.on('mouseenter', shadowLayer.id, onPointerEnter);\n  map.on('mouseleave', shadowLayer.id, onPointerLeave);\n  map.on('mousedown', shadowLayer.id, onPointerDown);\n  return () => {\n    mapCanvas.style.cursor = '';\n    map.off('mousemove', onPointerMove);\n    map.off('mouseenter', shadowLayer.id, onPointerEnter);\n    map.off('mouseleave', shadowLayer.id, onPointerLeave);\n    map.off('mousedown', shadowLayer.id, onPointerDown);\n    document.removeEventListener('pointerup', onPointerUp);\n    if (map.getLayer(shadowLayer.id)) map.removeLayer(shadowLayer.id);\n    if (map.getLayer(contourLayer.id)) map.removeLayer(contourLayer.id);\n  };\n}","map":null,"metadata":{},"sourceType":"module"}