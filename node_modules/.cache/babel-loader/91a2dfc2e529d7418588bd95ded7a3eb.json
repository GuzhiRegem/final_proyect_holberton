{"ast":null,"code":"var _jsxFileName = \"/home/pegatzu/final_proyect_holberton/src/components/Routes/ModalMapRouteEdit.jsx\";\nimport React, { useState } from 'react';\nimport { MapRouteEdit } from './MapRouteEdit';\nimport { Modal, Button, Spinner } from 'react-bootstrap';\nimport axios from 'axios';\nimport { Apiurl } from '../../services/apirest';\nexport function ModalMapRouteEdit(props) {\n  let routeData = undefined;\n\n  const updateChanges = data => {\n    routeData = data;\n    console.log(data);\n  };\n\n  const saveChanges = () => {\n    let url = Apiurl + \"/api/routes/edit/\" + props.id;\n    axios.put(url, {\n      points: routeData.route.geometry.coordinates,\n      stops: routeData.stops\n    }, {\n      headers: {\n        \"token\": localStorage.getItem(\"write_token\")\n      }\n    }).then(res => {\n      console.log(res);\n    });\n  };\n\n  const onLoad = () => {\n    document.querySelector(\".modal-body\").removeChild(document.querySelector(\".spinner-border\"));\n  };\n\n  return /*#__PURE__*/React.createElement(Modal, Object.assign({}, props, {\n    size: \"lg\",\n    \"aria-labelledby\": \"contained-modal-title-vcenter\",\n    centered: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    id: \"contained-modal-title-vcenter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, \"Map of \", props.name)), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Spinner, {\n    animation: \"border\",\n    variant: \"success\",\n    className: \"spinner-border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(MapRouteEdit, {\n    id: props.id,\n    updateFunction: updateChanges,\n    on_load: onLoad,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"secondary\",\n    onClick: props.onHide,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, \"Close\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: saveChanges,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, \"Save\")));\n}\nexport function MapRouteEditModal(props) {\n  const [modalShow, setModalShow] = React.useState(false);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n    variant: \"success\",\n    onClick: () => setModalShow(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, \"Edit\"), /*#__PURE__*/React.createElement(ModalMapRouteEdit, {\n    show: modalShow,\n    id: props.id,\n    name: props.name,\n    onHide: () => setModalShow(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/home/pegatzu/final_proyect_holberton/src/components/Routes/ModalMapRouteEdit.jsx"],"names":["React","useState","MapRouteEdit","Modal","Button","Spinner","axios","Apiurl","ModalMapRouteEdit","props","routeData","undefined","updateChanges","data","console","log","saveChanges","url","id","put","points","route","geometry","coordinates","stops","headers","localStorage","getItem","then","res","onLoad","document","querySelector","removeChild","name","onHide","MapRouteEditModal","modalShow","setModalShow"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { MapRouteEdit } from './MapRouteEdit';\nimport { Modal, Button, Spinner } from 'react-bootstrap';\nimport axios from 'axios';\nimport { Apiurl } from '../../services/apirest';\n\nexport function ModalMapRouteEdit(props) {\n\n  let routeData = undefined;\n\n  const updateChanges = (data) => {\n    routeData = data\n    console.log(data)\n  };\n\n  const saveChanges = () => {\n    let url = Apiurl + \"/api/routes/edit/\" + props.id\n    axios.put(url, { points: routeData.route.geometry.coordinates, stops: routeData.stops }, { headers: { \"token\": localStorage.getItem(\"write_token\") } })\n      .then(res => {\n        console.log(res)\n      })\n  };\n\n  const onLoad = () => {\n    document.querySelector(\".modal-body\").removeChild(document.querySelector(\".spinner-border\"));\n  }\n\n  return (\n    <Modal\n      {...props}\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          Map of {props.name}\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Spinner animation=\"border\" variant=\"success\" className=\"spinner-border\"/>\n        <MapRouteEdit id={props.id} updateFunction={updateChanges} on_load={onLoad}/>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant='secondary' onClick={props.onHide}>Close</Button>\n        <Button onClick={saveChanges}>Save</Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n\nexport function MapRouteEditModal(props) {\n  const [modalShow, setModalShow] = React.useState(false);\n\n  return (\n    <>\n      <Button variant=\"success\" onClick={() => setModalShow(true)}>\n        Edit\n      </Button>\n\n      <ModalMapRouteEdit\n        show={modalShow}\n        id={props.id}\n        name={props.name}\n        onHide={() => setModalShow(false)}\n      />\n    </>\n  );\n}"]},"metadata":{},"sourceType":"module"}