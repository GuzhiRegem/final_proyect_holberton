{"ast":null,"code":"var _jsxFileName = \"/home/pegatzus/react-prueba-proyecto/src/Pages/Map.jsx\";\nimport React, { useEffect } from 'react';\nimport { maplibregl } from 'maplibre-gl';\nimport { RulerControl, StylesControl, ZoomControl, CompassControl } from 'mapbox-gl-controls';\nexport function MapView() {\n  const [lng, setLng] = React.useState(-56.073358);\n  const [lat, setLat] = React.useState(-34.791454);\n  const [zoom, setZoom] = React.useState(11); // Initialize map when component mounts\n\n  useEffect(() => {\n    const map = new maplibregl.Map({\n      container: 'map',\n      // container id\n      style: 'https://basemaps.cartocdn.com/gl/dark-matter-gl-style/style.json',\n      // stylesheet location\n      center: [lng, lat],\n      zoom: zoom,\n      minPitch: 40,\n      maxPitch: 40,\n      pitch: 40,\n      bearing: 0.5\n    });\n    map.on('move', () => {\n      setLng(map.getCenter().lng.toFixed(4));\n      setLat(map.getCenter().lat.toFixed(4));\n      setZoom(map.getZoom().toFixed(2));\n    }); // Add ruler control\n\n    map.addControl(new RulerControl(), 'bottom-right');\n    map.on('ruler.on', () => console.log('%cruler.on', 'color: #3D5AFE'));\n    map.on('ruler.off', () => console.log('%cruler.off', 'color: #3D5AFE')); // with custom styles:\n\n    map.addControl(new StylesControl({\n      styles: [{\n        label: 'Streets',\n        styleName: 'Mapbox Streets',\n        styleUrl: 'mapbox://styles/mapbox/outdoors-v11'\n      }, {\n        label: 'Satellite',\n        styleName: 'Satellite',\n        styleUrl: 'mapbox://styles/mapbox/satellite-v9'\n      }],\n      onChange: style => console.log(style)\n    }), 'top-left'); // Add zoom control\n\n    map.addControl(new ZoomControl(), 'bottom-right'); // Add compass control\n\n    map.addControl(new CompassControl(), 'bottom-right'); // Render map\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"map\",\n      style: {\n        height: '100vh',\n        width: '100vw'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }\n    });\n  });\n}","map":{"version":3,"sources":["/home/pegatzus/react-prueba-proyecto/src/Pages/Map.jsx"],"names":["React","useEffect","maplibregl","RulerControl","StylesControl","ZoomControl","CompassControl","MapView","lng","setLng","useState","lat","setLat","zoom","setZoom","map","Map","container","style","center","minPitch","maxPitch","pitch","bearing","on","getCenter","toFixed","getZoom","addControl","console","log","styles","label","styleName","styleUrl","onChange","height","width"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { maplibregl } from 'maplibre-gl';\nimport { RulerControl, StylesControl, ZoomControl, CompassControl } from 'mapbox-gl-controls';\n\n\nexport function MapView() {\n  const [lng, setLng] = React.useState(-56.073358);\n  const [lat, setLat] = React.useState(-34.791454);\n  const [zoom, setZoom] = React.useState(11);\n\n  // Initialize map when component mounts\n  useEffect(() => {\n    const map = new maplibregl.Map({\n      container: 'map', // container id\n      style: 'https://basemaps.cartocdn.com/gl/dark-matter-gl-style/style.json', // stylesheet location\n      center: [lng, lat],\n      zoom: zoom,\n      minPitch: 40,\n      maxPitch: 40,\n      pitch: 40,\n      bearing: 0.5\n    });\n\n    map.on('move', () => {\n      setLng(map.getCenter().lng.toFixed(4));\n      setLat(map.getCenter().lat.toFixed(4));\n      setZoom(map.getZoom().toFixed(2));\n    });\n\n\n    // Add ruler control\n    map.addControl(new RulerControl(), 'bottom-right');\n    map.on('ruler.on', () => console.log('%cruler.on', 'color: #3D5AFE'));\n    map.on('ruler.off', () => console.log('%cruler.off', 'color: #3D5AFE'));\n\n    // with custom styles:\n    map.addControl(new StylesControl({\n      styles: [\n        {\n          label: 'Streets',\n          styleName: 'Mapbox Streets',\n          styleUrl: 'mapbox://styles/mapbox/outdoors-v11',\n        }, {\n          label: 'Satellite',\n          styleName: 'Satellite',\n          styleUrl: 'mapbox://styles/mapbox/satellite-v9',\n        },\n      ],\n      onChange: (style) => console.log(style),\n    }), 'top-left');\n\n    // Add zoom control\n    map.addControl(new ZoomControl(), 'bottom-right');\n\n    // Add compass control\n    map.addControl(new CompassControl(), 'bottom-right');\n\n    // Render map\n    return (\n      <div id=\"map\" style={{ height: '100vh', width: '100vw' }} />\n    );\n  }\n  );\n}"]},"metadata":{},"sourceType":"module"}