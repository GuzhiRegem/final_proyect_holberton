{"ast":null,"code":"/*\nimport React, { useEffect } from 'react';\nimport { maplibregl } from 'maplibre-gl';\n// import { RulerControl, StylesControl, ZoomControl, CompassControl } from 'mapbox-gl-controls';\n\n\nexport function MapView(){\n  const domain = 'localhost:'; \n  const [lng] = useState(-56.15);\n  const [lat] = useState(-34.87);\n  const [zoom] = useState(11);\n\n  // Initialize map when component mounts\n  useEffect(() => {\n  const map = new maplibregl.Map({\n    container: 'map', // container id\n    style: 'http://' + domain + ':8080/styles/osm-bright/style.json', // style URL\n    center: [-56.073358, -34.791454],\n    zoom: 15.0,\n    minPitch: 40,\n    maxPitch: 40,\n    pitch: 40,\n    bearing: 0.5\n    });\n  });\n  */\n\n/*  map.on('move', () => {\n      setLng(map.getCenter().lng.toFixed(4));\n      setLat(map.getCenter().lat.toFixed(4));\n      setZoom(map.getZoom().toFixed(2));\n    });\n    // Add ruler control\n  map.addControl(new RulerControl(), 'bottom-right');\n  map.on('ruler.on', () => console.log('%cruler.on', 'color: #3D5AFE'));\n  map.on('ruler.off', () => console.log('%cruler.off', 'color: #3D5AFE'));\n  \n  // with custom styles:\n  map.addControl(new StylesControl({\n    styles: [\n      {\n        label: 'Streets',\n        styleName: 'Mapbox Streets',\n        styleUrl: 'mapbox://styles/mapbox/outdoors-v11',\n      }, {\n        label: 'Satellite',\n        styleName: 'Satellite',\n        styleUrl: 'mapbox://styles/mapbox/satellite-v9',\n      },\n    ],\n    onChange: (style) => console.log(style),\n  }), 'top-left');\n   // Add zoom control\n  map.addControl(new ZoomControl(), 'bottom-right');\n   // Add compass control\n  map.addControl(new CompassControl(), 'bottom-right');\n\n  // Clean up on unmount\n  return () => map.remove();\n}, []); // eslint-disable-line react-hooks/exhaustive-deps\n*/\n// Render map","map":{"version":3,"sources":["/home/pegatzus/react-prueba-proyecto/src/Pages/Map.jsx"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKI","sourcesContent":["/*\nimport React, { useEffect } from 'react';\nimport { maplibregl } from 'maplibre-gl';\n// import { RulerControl, StylesControl, ZoomControl, CompassControl } from 'mapbox-gl-controls';\n\n\nexport function MapView(){\n  const domain = 'localhost:'; \n  const [lng] = useState(-56.15);\n  const [lat] = useState(-34.87);\n  const [zoom] = useState(11);\n\n  // Initialize map when component mounts\n  useEffect(() => {\n  const map = new maplibregl.Map({\n    container: 'map', // container id\n    style: 'http://' + domain + ':8080/styles/osm-bright/style.json', // style URL\n    center: [-56.073358, -34.791454],\n    zoom: 15.0,\n    minPitch: 40,\n    maxPitch: 40,\n    pitch: 40,\n    bearing: 0.5\n    });\n  });\n  */\n\n\n\n  /*  map.on('move', () => {\n        setLng(map.getCenter().lng.toFixed(4));\n        setLat(map.getCenter().lat.toFixed(4));\n        setZoom(map.getZoom().toFixed(2));\n      });\n\n\n    // Add ruler control\n    map.addControl(new RulerControl(), 'bottom-right');\n    map.on('ruler.on', () => console.log('%cruler.on', 'color: #3D5AFE'));\n    map.on('ruler.off', () => console.log('%cruler.off', 'color: #3D5AFE'));\n    \n    // with custom styles:\n    map.addControl(new StylesControl({\n      styles: [\n        {\n          label: 'Streets',\n          styleName: 'Mapbox Streets',\n          styleUrl: 'mapbox://styles/mapbox/outdoors-v11',\n        }, {\n          label: 'Satellite',\n          styleName: 'Satellite',\n          styleUrl: 'mapbox://styles/mapbox/satellite-v9',\n        },\n      ],\n      onChange: (style) => console.log(style),\n    }), 'top-left');\n\n    // Add zoom control\n    map.addControl(new ZoomControl(), 'bottom-right');\n\n    // Add compass control\n    map.addControl(new CompassControl(), 'bottom-right');\n  \n    // Clean up on unmount\n    return () => map.remove();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n  */ \n    // Render map"]},"metadata":{},"sourceType":"module"}