{"ast":null,"code":"var _jsxFileName = \"/home/pegatzus/react-prueba-proyecto/src/Pages/Map.jsx\";\nimport React, { useRef, useEffect, useState } from 'react';\nimport { RulerControl, StylesControl, ZoomControl, CompassControl } from 'mapbox-gl-controls';\nimport mapboxgl from 'mapbox-gl';\nexport function MapView() {\n  mapboxgl.accessToken = \"pk.eyJ1IjoiYm9saW9saWFndXN0aW4iLCJhIjoiY2t6eDVzcWY5NDJoNTJucW9xaHY2bXA2dCJ9.ZR3iXpsXSNMjzh9Nj-0EDQ\";\n  const [lng, setLng] = useState(-56.073358);\n  const [lat, setLat] = useState(-34.791454);\n  const [zoom, setZoom] = useState(11); // Initialize map when component mounts\n\n  useEffect(() => {\n    if (map.current) return;\n    const map = new mapboxgl.Map({\n      container: 'map',\n      style: 'mapbox://styles/mapbox/streets-v11',\n      center: [lng, lat],\n      zoom\n    });\n    map.on('move', () => {\n      setLng(map.getCenter().lng.toFixed(4));\n      setLat(map.getCenter().lat.toFixed(4));\n      setZoom(map.getZoom().toFixed(2));\n    }); // Add ruler control\n\n    map.addControl(new RulerControl(), 'bottom-right');\n    map.on('ruler.on', () => console.log('%cruler.on', 'color: #3D5AFE'));\n    map.on('ruler.off', () => console.log('%cruler.off', 'color: #3D5AFE')); // with custom styles:\n\n    map.addControl(new StylesControl({\n      styles: [{\n        label: 'Streets',\n        styleName: 'Mapbox Streets',\n        styleUrl: 'mapbox://styles/mapbox/outdoors-v11'\n      }, {\n        label: 'Satellite',\n        styleName: 'Satellite',\n        styleUrl: 'mapbox://styles/mapbox/satellite-v9'\n      }],\n      onChange: style => console.log(style)\n    }), 'top-left'); // Add zoom control\n\n    map.addControl(new ZoomControl(), 'bottom-right'); // Add compass control\n\n    map.addControl(new CompassControl(), 'bottom-right'); // Render map\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"map\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }\n    });\n  });\n}","map":{"version":3,"sources":["/home/pegatzus/react-prueba-proyecto/src/Pages/Map.jsx"],"names":["React","useRef","useEffect","useState","RulerControl","StylesControl","ZoomControl","CompassControl","mapboxgl","MapView","accessToken","lng","setLng","lat","setLat","zoom","setZoom","map","current","Map","container","style","center","on","getCenter","toFixed","getZoom","addControl","console","log","styles","label","styleName","styleUrl","onChange"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,SAASC,YAAT,EAAuBC,aAAvB,EAAsCC,WAAtC,EAAmDC,cAAnD,QAAyE,oBAAzE;AACA,OAAOC,QAAP,MAAqB,WAArB;AAGA,OAAO,SAASC,OAAT,GAAmB;AAExBD,EAAAA,QAAQ,CAACE,WAAT,GAAuB,oGAAvB;AACA,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBT,QAAQ,CAAC,CAAC,SAAF,CAA9B;AACA,QAAM,CAACU,GAAD,EAAMC,MAAN,IAAgBX,QAAQ,CAAC,CAAC,SAAF,CAA9B;AACA,QAAM,CAACY,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,EAAD,CAAhC,CALwB,CAOxB;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIe,GAAG,CAACC,OAAR,EAAiB;AACjB,UAAMD,GAAG,GAAG,IAAIT,QAAQ,CAACW,GAAb,CAAiB;AAC3BC,MAAAA,SAAS,EAAE,KADgB;AAE3BC,MAAAA,KAAK,EAAE,oCAFoB;AAG3BC,MAAAA,MAAM,EAAE,CAACX,GAAD,EAAME,GAAN,CAHmB;AAI3BE,MAAAA;AAJ2B,KAAjB,CAAZ;AAOAE,IAAAA,GAAG,CAACM,EAAJ,CAAO,MAAP,EAAe,MAAM;AACnBX,MAAAA,MAAM,CAACK,GAAG,CAACO,SAAJ,GAAgBb,GAAhB,CAAoBc,OAApB,CAA4B,CAA5B,CAAD,CAAN;AACAX,MAAAA,MAAM,CAACG,GAAG,CAACO,SAAJ,GAAgBX,GAAhB,CAAoBY,OAApB,CAA4B,CAA5B,CAAD,CAAN;AACAT,MAAAA,OAAO,CAACC,GAAG,CAACS,OAAJ,GAAcD,OAAd,CAAsB,CAAtB,CAAD,CAAP;AACD,KAJD,EATc,CAgBd;;AACAR,IAAAA,GAAG,CAACU,UAAJ,CAAe,IAAIvB,YAAJ,EAAf,EAAmC,cAAnC;AACAa,IAAAA,GAAG,CAACM,EAAJ,CAAO,UAAP,EAAmB,MAAMK,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0B,gBAA1B,CAAzB;AACAZ,IAAAA,GAAG,CAACM,EAAJ,CAAO,WAAP,EAAoB,MAAMK,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2B,gBAA3B,CAA1B,EAnBc,CAqBd;;AACAZ,IAAAA,GAAG,CAACU,UAAJ,CAAe,IAAItB,aAAJ,CAAkB;AAC/ByB,MAAAA,MAAM,EAAE,CACN;AACEC,QAAAA,KAAK,EAAE,SADT;AAEEC,QAAAA,SAAS,EAAE,gBAFb;AAGEC,QAAAA,QAAQ,EAAE;AAHZ,OADM,EAKH;AACDF,QAAAA,KAAK,EAAE,WADN;AAEDC,QAAAA,SAAS,EAAE,WAFV;AAGDC,QAAAA,QAAQ,EAAE;AAHT,OALG,CADuB;AAY/BC,MAAAA,QAAQ,EAAGb,KAAD,IAAWO,OAAO,CAACC,GAAR,CAAYR,KAAZ;AAZU,KAAlB,CAAf,EAaI,UAbJ,EAtBc,CAqCd;;AACAJ,IAAAA,GAAG,CAACU,UAAJ,CAAe,IAAIrB,WAAJ,EAAf,EAAkC,cAAlC,EAtCc,CAwCd;;AACAW,IAAAA,GAAG,CAACU,UAAJ,CAAe,IAAIpB,cAAJ,EAAf,EAAqC,cAArC,EAzCc,CA2Cd;;AACA,wBACE;AAAK,MAAA,EAAE,EAAC,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD,GA/CQ,CAAT;AAiDD","sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport { RulerControl, StylesControl, ZoomControl, CompassControl } from 'mapbox-gl-controls';\nimport mapboxgl from 'mapbox-gl';\n\n\nexport function MapView() {\n\n  mapboxgl.accessToken = \"pk.eyJ1IjoiYm9saW9saWFndXN0aW4iLCJhIjoiY2t6eDVzcWY5NDJoNTJucW9xaHY2bXA2dCJ9.ZR3iXpsXSNMjzh9Nj-0EDQ\"\n  const [lng, setLng] = useState(-56.073358);\n  const [lat, setLat] = useState(-34.791454);\n  const [zoom, setZoom] = useState(11);\n\n  // Initialize map when component mounts\n  useEffect(() => {\n    if (map.current) return;\n    const map = new mapboxgl.Map({\n      container: 'map',\n      style: 'mapbox://styles/mapbox/streets-v11',\n      center: [lng, lat],\n      zoom\n    });\n\n    map.on('move', () => {\n      setLng(map.getCenter().lng.toFixed(4));\n      setLat(map.getCenter().lat.toFixed(4));\n      setZoom(map.getZoom().toFixed(2));\n    });\n\n\n    // Add ruler control\n    map.addControl(new RulerControl(), 'bottom-right');\n    map.on('ruler.on', () => console.log('%cruler.on', 'color: #3D5AFE'));\n    map.on('ruler.off', () => console.log('%cruler.off', 'color: #3D5AFE'));\n\n    // with custom styles:\n    map.addControl(new StylesControl({\n      styles: [\n        {\n          label: 'Streets',\n          styleName: 'Mapbox Streets',\n          styleUrl: 'mapbox://styles/mapbox/outdoors-v11',\n        }, {\n          label: 'Satellite',\n          styleName: 'Satellite',\n          styleUrl: 'mapbox://styles/mapbox/satellite-v9',\n        },\n      ],\n      onChange: (style) => console.log(style),\n    }), 'top-left');\n\n    // Add zoom control\n    map.addControl(new ZoomControl(), 'bottom-right');\n\n    // Add compass control\n    map.addControl(new CompassControl(), 'bottom-right');\n\n    // Render map\n    return (\n      <div id=\"map\" />\n    );\n  }\n  );\n}"]},"metadata":{},"sourceType":"module"}