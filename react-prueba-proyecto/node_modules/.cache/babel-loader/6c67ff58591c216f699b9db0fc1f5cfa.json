{"ast":null,"code":"var _jsxFileName = \"/home/pegatzus/react-prueba-proyecto/src/components/Map.jsx\";\nimport React, { useEffect, useState, useRef } from 'react';\nimport { maplibregl } from 'maplibre-gl'; // import { RulerControl, StylesControl, ZoomControl, CompassControl } from 'mapbox-gl-controls';\n\nexport function MapView() {\n  const domain = 'localhost:';\n  const [lng] = useState(-56.15);\n  const [lat] = useState(-34.87);\n  const [zoom] = useState(11); // Initialize map when component mounts\n\n  useEffect(() => {\n    if (map.current) return;\n    map.current = new maplibregl.MapView({\n      container: 'mapContainer.current',\n      style: 'https://' + domain + '8080/styles/dark-matter/style.json',\n      center: [lng, lat],\n      zoom: [zoom]\n    });\n  }, []);\n  /*  map.on('move', () => {\n        setLng(map.getCenter().lng.toFixed(4));\n        setLat(map.getCenter().lat.toFixed(4));\n        setZoom(map.getZoom().toFixed(2));\n      });\n      // Add ruler control\n    map.addControl(new RulerControl(), 'bottom-right');\n    map.on('ruler.on', () => console.log('%cruler.on', 'color: #3D5AFE'));\n    map.on('ruler.off', () => console.log('%cruler.off', 'color: #3D5AFE'));\n    \n    // with custom styles:\n    map.addControl(new StylesControl({\n      styles: [\n        {\n          label: 'Streets',\n          styleName: 'Mapbox Streets',\n          styleUrl: 'mapbox://styles/mapbox/outdoors-v11',\n        }, {\n          label: 'Satellite',\n          styleName: 'Satellite',\n          styleUrl: 'mapbox://styles/mapbox/satellite-v9',\n        },\n      ],\n      onChange: (style) => console.log(style),\n    }), 'top-left');\n     // Add zoom control\n    map.addControl(new ZoomControl(), 'bottom-right');\n     // Add compass control\n    map.addControl(new CompassControl(), 'bottom-right');\n  \n    // Clean up on unmount\n    return () => map.remove();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n  */\n  // Render map\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map-wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    ref: mapContainer,\n    className: \"map\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }));\n}","map":{"version":3,"sources":["/home/pegatzus/react-prueba-proyecto/src/components/Map.jsx"],"names":["React","useEffect","useState","useRef","maplibregl","MapView","domain","lng","lat","zoom","map","current","container","style","center","mapContainer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,SAASC,UAAT,QAA2B,aAA3B,C,CACA;;AAGA,OAAO,SAASC,OAAT,GAAkB;AAEvB,QAAMC,MAAM,GAAG,YAAf;AACA,QAAM,CAACC,GAAD,IAAQL,QAAQ,CAAC,CAAC,KAAF,CAAtB;AACA,QAAM,CAACM,GAAD,IAAQN,QAAQ,CAAC,CAAC,KAAF,CAAtB;AACA,QAAM,CAACO,IAAD,IAASP,QAAQ,CAAC,EAAD,CAAvB,CALuB,CAOvB;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIS,GAAG,CAACC,OAAR,EAAiB;AACjBD,IAAAA,GAAG,CAACC,OAAJ,GAAc,IAAIP,UAAU,CAACC,OAAf,CAAuB;AACnCO,MAAAA,SAAS,EAAE,sBADwB;AAEnCC,MAAAA,KAAK,EAAE,aAAaP,MAAb,GAAsB,oCAFM;AAGnCQ,MAAAA,MAAM,EAAE,CAACP,GAAD,EAAMC,GAAN,CAH2B;AAInCC,MAAAA,IAAI,EAAE,CAACA,IAAD;AAJ6B,KAAvB,CAAd;AAMD,GARQ,EAQN,EARM,CAAT;AAUA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKI;;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,GAAG,EAAEM,YAAV;AAAwB,IAAA,SAAS,EAAC,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKH","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport { maplibregl } from 'maplibre-gl';\n// import { RulerControl, StylesControl, ZoomControl, CompassControl } from 'mapbox-gl-controls';\n\n\nexport function MapView(){\n \n  const domain = 'localhost:'; \n  const [lng] = useState(-56.15);\n  const [lat] = useState(-34.87);\n  const [zoom] = useState(11);\n\n  // Initialize map when component mounts\n  useEffect(() => {\n    if (map.current) return;\n    map.current = new maplibregl.MapView({\n      container: 'mapContainer.current',\n      style: 'https://' + domain + '8080/styles/dark-matter/style.json',\n      center: [lng, lat],\n      zoom: [zoom]\n    });\n  }, []);\n\n  /*  map.on('move', () => {\n        setLng(map.getCenter().lng.toFixed(4));\n        setLat(map.getCenter().lat.toFixed(4));\n        setZoom(map.getZoom().toFixed(2));\n      });\n\n\n    // Add ruler control\n    map.addControl(new RulerControl(), 'bottom-right');\n    map.on('ruler.on', () => console.log('%cruler.on', 'color: #3D5AFE'));\n    map.on('ruler.off', () => console.log('%cruler.off', 'color: #3D5AFE'));\n    \n    // with custom styles:\n    map.addControl(new StylesControl({\n      styles: [\n        {\n          label: 'Streets',\n          styleName: 'Mapbox Streets',\n          styleUrl: 'mapbox://styles/mapbox/outdoors-v11',\n        }, {\n          label: 'Satellite',\n          styleName: 'Satellite',\n          styleUrl: 'mapbox://styles/mapbox/satellite-v9',\n        },\n      ],\n      onChange: (style) => console.log(style),\n    }), 'top-left');\n\n    // Add zoom control\n    map.addControl(new ZoomControl(), 'bottom-right');\n\n    // Add compass control\n    map.addControl(new CompassControl(), 'bottom-right');\n  \n    // Clean up on unmount\n    return () => map.remove();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n  */ \n    // Render map\n    return (\n      <div className='map-wrap'>    \n        <div ref={mapContainer} className=\"map\"/>\n      </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}