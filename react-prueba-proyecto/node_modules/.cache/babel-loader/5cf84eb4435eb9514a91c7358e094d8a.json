{"ast":null,"code":"import Base from '../Base/Base';\nimport Button from '../Button/Button';\nimport popupTemplate from './popupTemplate';\nimport iconInspect from '../icons/inspect';\nexport default class InspectControl extends Base {\n  constructor(options) {\n    super();\n    this.console = options === null || options === void 0 ? void 0 : options.console;\n    this.popupNode = null;\n    this.lngLat = null;\n    this.isInspecting = false;\n    this.button = new Button();\n  }\n\n  insert() {\n    this.addClassName('mapbox-control-inspect');\n    this.button.setIcon(iconInspect());\n    this.button.onClick(() => {\n      if (this.isInspecting) {\n        this.inspectingOff();\n      } else {\n        this.inspectingOn();\n      }\n    });\n    this.addButton(this.button);\n    this.mapClickListener = this.mapClickListener.bind(this);\n    this.updatePosition = this.updatePosition.bind(this);\n  }\n\n  inspectingOn() {\n    this.isInspecting = true;\n    this.button.addClassName('-active');\n    this.map.on('click', this.mapClickListener);\n    this.map.on('move', this.updatePosition);\n    this.map.getCanvas().style.cursor = 'pointer';\n  }\n\n  inspectingOff() {\n    this.isInspecting = false;\n    this.button.removeClassName('-active');\n    this.map.off('click', this.mapClickListener);\n    this.map.off('move', this.updatePosition);\n    this.map.getCanvas().style.cursor = '';\n    this.removePopup();\n  }\n\n  getFeatures(event) {\n    const selectThreshold = 3;\n    const queryBox = [[event.point.x - selectThreshold, event.point.y + selectThreshold], [event.point.x + selectThreshold, event.point.y - selectThreshold] // top right (NE)\n    ];\n    return this.map.queryRenderedFeatures(queryBox);\n  }\n\n  addPopup(features) {\n    this.popupNode = popupTemplate(features);\n    this.mapContainer.appendChild(this.popupNode);\n    this.updatePosition();\n\n    if (this.console) {\n      console.log(features);\n    }\n  }\n\n  removePopup() {\n    if (!this.popupNode) return;\n    this.mapContainer.removeChild(this.popupNode);\n    this.popupNode = null;\n  }\n\n  updatePosition() {\n    if (!this.lngLat) return;\n    const canvasRect = this.mapCanvas.getBoundingClientRect();\n    const pos = this.map.project(this.lngLat);\n    this.popupNode.style.left = `${pos.x - canvasRect.left}px`;\n    this.popupNode.style.top = `${pos.y - canvasRect.top}px`;\n  }\n\n  mapClickListener(event) {\n    this.lngLat = event.lngLat;\n    const features = this.getFeatures(event);\n    this.removePopup();\n    this.addPopup(features);\n  }\n\n  onAddControl() {\n    this.mapContainer = this.map.getContainer();\n    this.mapCanvas = this.map.getCanvas();\n    this.insert();\n  }\n\n  onRemoveControl() {\n    this.inspectingOff();\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}